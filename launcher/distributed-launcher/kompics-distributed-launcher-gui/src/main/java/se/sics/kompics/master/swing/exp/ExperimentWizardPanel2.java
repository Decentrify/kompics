/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ExperimentWizardPane1.java
 *
 * Created on 07-Aug-2009, 12:11:33
 */
package se.sics.kompics.master.swing.exp;

import java.awt.Component;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.netbeans.spi.wizard.WizardController;
import org.netbeans.spi.wizard.WizardPage;
import se.sics.kompics.master.swing.exp.ExpEntry.ExperimentStatus;
import se.sics.kompics.wan.ssh.Host;

/**
 *
 * @author jdowling
 */
public class ExperimentWizardPanel2 extends WizardPage {

    public final static String NEWLINE = "\n";

    private static Set<Host> availableHosts = new HashSet<Host>();
    HostTableModel experimentTableModel = new HostTableModel();

    private int numHosts = 0;

//    NodeListModel nodeListModel = new NodeListModel();
    /** Creates new form ExperimentWizardPane1 */
    public ExperimentWizardPanel2() {
        super();

        initComponents();

        experimentTableModel.addHosts(availableHosts);
        leftTable.setModel(experimentTableModel);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addHostButton = new javax.swing.JButton();
        leftScrollPane = new javax.swing.JScrollPane();
        leftTable = new javax.swing.JTable();
        rightScrollPane = new javax.swing.JScrollPane();
        nodesTA = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        numHostsLabel = new javax.swing.JLabel();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(se.sics.kompics.master.swing.DesktopApplication1.class).getContext().getResourceMap(ExperimentWizardPanel2.class);
        addHostButton.setText(resourceMap.getString("addHostButton.text")); // NOI18N
        addHostButton.setName("addHostButton"); // NOI18N
        addHostButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addHostButtonActionPerformed(evt);
            }
        });

        leftScrollPane.setName("leftScrollPane"); // NOI18N

        leftTable.setModel(experimentTableModel);
        leftTable.setName("leftTable"); // NOI18N
        leftScrollPane.setViewportView(leftTable);

        rightScrollPane.setName("rightScrollPane"); // NOI18N

        nodesTA.setColumns(20);
        nodesTA.setRows(5);
        nodesTA.setName("nodesTA"); // NOI18N
        rightScrollPane.setViewportView(nodesTA);

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        numHostsLabel.setText(resourceMap.getString("numHostsLabel.text")); // NOI18N
        numHostsLabel.setName("numHostsLabel"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(leftScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addHostButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numHostsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addComponent(rightScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(241, 241, 241))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(leftScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(rightScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(addHostButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(numHostsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 17, Short.MAX_VALUE)
                            .addComponent(jLabel1))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, numHostsLabel});

    }// </editor-fold>//GEN-END:initComponents

    private void addHostButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addHostButtonActionPerformed

        int[] rows = leftTable.getSelectedRows();


        for (int row : rows) {
            String host = (String) leftTable.getValueAt(row, 0);
//            int sessionId = (Integer) leftTable.getValueAt(row, 1);
//            ExperimentStatus status = (ExperimentStatus) leftTable.getValueAt(row, 1);

            nodesTA.append(host +NEWLINE); //  ":" + sessionId + 
            numHosts++;
        }
        numHostsLabel.setText(Integer.toString(numHosts));
    }//GEN-LAST:event_addHostButtonActionPerformed

    @Override
    protected String validateContents(Component component, Object event) {

        if (nodesTA.getLineCount() > 1) {
            setForwardNavigationMode(WizardController.MODE_CAN_CONTINUE);
            return null;
        }
        return "You must select at least one host to run the experiment on";

    }

    public static void setHosts(Set<Host> hosts) {
        for (Host host : hosts) {
            Host h;
            try {
                h = (Host) host.clone();
                availableHosts.add(h);
            } catch (CloneNotSupportedException ex) {
                Logger.getLogger(ExperimentWizardPanel2.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public static final String getDescription() {
        return "Select experiment hosts.";
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addHostButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane leftScrollPane;
    private javax.swing.JTable leftTable;
    private javax.swing.JTextArea nodesTA;
    private javax.swing.JLabel numHostsLabel;
    private javax.swing.JScrollPane rightScrollPane;
    // End of variables declaration//GEN-END:variables
}
